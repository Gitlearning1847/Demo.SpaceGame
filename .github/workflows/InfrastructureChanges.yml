name: "InfrastructureChanges"
on: pull_request
defaults:
  run:
    working-directory: ./Tailspin.SpaceGame.Terraform
jobs:
  terraform:
    name: "Run Terraform Plan"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: "./Tailspin.SpaceGame.Terraform"
          tf_actions_comment: true
          tf_actions_cli_credentials_hostname: app.terraform.io 
          tf_actions_cli_credentials_token: ${{ secrets.TF_API_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Terraform Plan"
        id: plan
        if: github.event_name == 'pull_request'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: "plan"
          tf_actions_working_dir: "./Tailspin.SpaceGame.Terraform"
          tf_actions_comment: true
          args: -no-color
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_agent_client_id: ${{ secrets.TF_ARM_CLIENT_ID }}
          TF_VAR_agent_client_secret: ${{ secrets.TF_ARM_CLIENT_SECRET }}
          TF_VAR_subscription_id: ${{ secrets.TF_ARM_SUBSCRIPTION_ID }}
          TF_VAR_tenant_id: ${{ secrets.TF_ARM_TENANT_ID }}
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
